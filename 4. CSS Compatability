# 1. Create a table and apply table-layout as fixed and none
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Table Layout Example</title>
    <style>
        /* Table layout with 'fixed' */
        .fixed-table {
            width: 100%;
            table-layout: fixed; /* Columns will have equal width */
            border-collapse: collapse; /* Remove space between borders */
        }
        
        .fixed-table th, .fixed-table td {
            border: 1px solid #000;
            padding: 8px;
            text-align: center;
        }
        
        /* Table layout with 'auto' */
        .auto-table {
            width: 100%;
            table-layout: auto; /* Columns will adjust according to content */
            border-collapse: collapse; /* Remove space between borders */
        }
        
        .auto-table th, .auto-table td {
            border: 1px solid #000;
            padding: 8px;
            text-align: center;
        }

        /* Styling for the headings */
        h2 {
            text-align: center;
        }
    </style>
</head>
<body>

    <h2>Table Layout: Fixed</h2>
    <table class="fixed-table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Age</th>
                <th>City</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>John Doe</td>
                <td>30</td>
                <td>New York</td>
            </tr>
            <tr>
                <td>Jane Smith</td>
                <td>28</td>
                <td>Los Angeles</td>
            </tr>
            <tr>
                <td>Emily Johnson</td>
                <td>35</td>
                <td>Chicago</td>
            </tr>
        </tbody>
    </table>

    <h2>Table Layout: Auto</h2>
    <table class="auto-table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Age</th>
                <th>City</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>John Doe</td>
                <td>30</td>
                <td>New York</td>
            </tr>
            <tr>
                <td>Jane Smith</td>
                <td>28</td>
                <td>Los Angeles</td>
            </tr>
            <tr>
                <td>Emily Johnson</td>
                <td>35</td>
                <td>Chicago</td>
            </tr>
        </tbody>
    </table>

</body>
</html>

# 2. Create a list and change its list-style-type
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>List Style Example</title>
    <style>
        /* Default list style (Disc) */
        .default-list {
            list-style-type: disc;
        }

        /* Change list style to Circle */
        .circle-list {
            list-style-type: circle;
        }

        /* Change list style to Square */
        .square-list {
            list-style-type: square;
        }

        /* Ordered list style */
        .decimal-list {
            list-style-type: decimal;
        }
        
        /* Styling for the list items */
        ul {
            margin: 20px;
            padding: 0;
        }

        li {
            padding: 5px;
        }
    </style>
</head>
<body>

    <h2>Unordered List with Default Style (Disc)</h2>
    <ul class="default-list">
        <li>Item 1</li>
        <li>Item 2</li>
        <li>Item 3</li>
    </ul>

    <h2>Unordered List with Circle Style</h2>
    <ul class="circle-list">
        <li>Item A</li>
        <li>Item B</li>
        <li>Item C</li>
    </ul>

    <h2>Unordered List with Square Style</h2>
    <ul class="square-list">
        <li>Item X</li>
        <li>Item Y</li>
        <li>Item Z</li>
    </ul>

    <h2>Ordered List with Decimal Style</h2>
    <ol class="decimal-list">
        <li>Step 1</li>
        <li>Step 2</li>
        <li>Step 3</li>
    </ol>

</body>
</html>

# 3. Create a grid with of different types
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CSS Grid Examples</title>
    <style>
        /* Basic Grid */
        .basic-grid {
            display: grid;
            grid-template-columns: repeat(3, 1fr); /* 3 equal-width columns */
            gap: 10px; /* Spacing between grid items */
            margin: 20px;
            border: 1px solid #000;
        }

        .basic-grid div {
            background-color: #f4f4f4;
            padding: 20px;
            text-align: center;
            border: 1px solid #ccc;
        }

        /* Responsive Grid */
        .responsive-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(150px, 1fr)); /* Auto-fill with minimum column size of 150px */
            gap: 15px;
            margin: 20px;
            border: 1px solid #000;
        }

        .responsive-grid div {
            background-color: #f4f4f4;
            padding: 20px;
            text-align: center;
            border: 1px solid #ccc;
        }

        /* Grid with Different Row and Column Sizes */
        .custom-size-grid {
            display: grid;
            grid-template-columns: 1fr 2fr 1fr; /* First and last columns are 1 fraction, middle is 2 fractions */
            grid-template-rows: 100px auto; /* First row is fixed height, second is auto */
            gap: 20px;
            margin: 20px;
            border: 1px solid #000;
        }

        .custom-size-grid div {
            background-color: #f4f4f4;
            padding: 20px;
            text-align: center;
            border: 1px solid #ccc;
        }

        /* Styling for headings */
        h2 {
            text-align: center;
        }
    </style>
</head>
<body>

    <h2>Basic Grid Layout</h2>
    <div class="basic-grid">
        <div>Item 1</div>
        <div>Item 2</div>
        <div>Item 3</div>
        <div>Item 4</div>
        <div>Item 5</div>
        <div>Item 6</div>
    </div>

    <h2>Responsive Grid Layout</h2>
    <div class="responsive-grid">
        <div>Item A</div>
        <div>Item B</div>
        <div>Item C</div>
        <div>Item D</div>
        <div>Item E</div>
        <div>Item F</div>
        <div>Item G</div>
    </div>

    <h2>Grid with Different Row and Column Sizes</h2>
    <div class="custom-size-grid">
        <div>Header 1</div>
        <div>Header 2</div>
        <div>Header 3</div>
        <div>Content 1</div>
        <div>Content 2</div>
    </div>

</body>
</html>

# 4. Create a hero image
<!DOCTYPE html>
<html>
<head>
<meta name="viewport" content="width=device-width, initial-scale=1">
<style>
body, html {
  height: 100%;
  margin: 0;
  font-family: Arial, Helvetica, sans-serif;
}

.hero-image {
  background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("https://www.w3schools.com/w3images/lights.jpg"); /* Ensure this URL is valid */
  height: 50%;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  position: relative;
}

.hero-text {
  text-align: center;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: white;
}

.hero-text h1 {
  font-size: 50px;
}

.hero-text p {
  font-size: 20px;
  margin: 10px 0;
}

.hero-text button {
  border: none;
  outline: 0;
  display: inline-block;
  padding: 10px 25px;
  color: black;
  background-color: #ddd;
  text-align: center;
  cursor: pointer;
  font-size: 18px;
}

.hero-text button:hover {
  background-color: #555;
  color: white;
}
</style>
</head>
<body>

<div class="hero-image">
  <div class="hero-text">
    <h1>I am Priya</h1>
    <p>And I'm a Software Developer</p>
    <button>Contact Me</button>
  </div>
</div>

<p>Welcome to my personal website. Here you can learn more about my work and projects. Feel free to explore!</p>

</body>
</html>

# 5. Write a program of view-port for grid, media queries, image and video.
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Responsive Grid Layout</title>
  <style>
    /* Global Styles */
    body, html {
      margin: 0;
      padding: 0;
      font-family: Arial, sans-serif;
    }

    /* Container for the Grid */
    .container {
      display: grid;
      grid-template-columns: repeat(3, 1fr); /* 3 columns by default */
      gap: 20px;
      padding: 20px;
    }

    /* Each grid item */
    .item {
      background-color: #f2f2f2;
      padding: 20px;
      text-align: center;
      border-radius: 8px;
    }

    /* Image and Video Styles - Ensuring responsive media */
    .item img, .item video {
      width: 100%;
      height: auto;
      border-radius: 8px;
    }

    /* Responsive Design for Smaller Screens */
    @media (max-width: 768px) {
      .container {
        grid-template-columns: repeat(2, 1fr); /* 2 columns for tablets */
      }
    }

    @media (max-width: 480px) {
      .container {
        grid-template-columns: 1fr; /* 1 column for mobile */
      }
    }
  </style>
</head>
<body>

  <div class="container">
    <!-- Grid Item 1 (Image) -->
    <div class="item">
      <h2>Beautiful Landscape</h2>
      <img src="https://www.w3schools.com/w3images/lights.jpg" alt="Landscape">
    </div>
    
    <!-- Grid Item 2 (Video) -->
    <div class="item">
      <h2>Nature Video</h2>
      <video controls>
        <source src="https://www.w3schools.com/html/mov_bbb.mp4" type="video/mp4">
        Your browser does not support the video tag.
      </video>
    </div>

    <!-- Grid Item 3 (Image) -->
    <div class="item">
      <h2>Cityscape</h2>
      <img src="https://www.w3schools.com/w3images/forest.jpg" alt="Cityscape">
    </div>
  </div>

</body>
</html>
